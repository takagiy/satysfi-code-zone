@require: list

module Seqsplit: sig
  val embed-string-breakable : context -> string -> inline-boxes

  direct \seqsplit : [string] inline-cmd
end = struct
  let string-map-fold f plus zero s =
    let-rec aux l s =
      if l == 0 then zero
      else
        plus (f (string-sub s 0 1)) (aux (l - 1) (string-sub s 1 (l - 1)))
    in
    aux (string-length s) s

  let tokenize ctx s =
    let s = read-inline ctx (embed-string s) in
    discretionary 0 s s inline-nil

  let embed-string-breakable ctx s =
    s |> string-map-fold (tokenize ctx) (++) inline-nil

  let-inline ctx \seqsplit s =
    embed-string-breakable ctx s
end
